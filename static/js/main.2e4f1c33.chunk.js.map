{"version":3,"sources":["components/Layout/ThemeToggler.tsx","containers/Navbar.tsx","selectors/index.ts","components/ResultSection/RateIcon.tsx","components/ResultSection/ProgressBar.tsx","components/ResultSection/ResultsList.tsx","components/ResultSection/LabResults.tsx","components/ResultSection/Opportunities.tsx","components/ResultSection/Diagnostics.tsx","components/ResultSection/ResultsWrapper.tsx","assets/404.svg","components/Layout/NotFound.tsx","components/Layout/Alert.tsx","components/Layout/Loading.tsx","containers/Results.tsx","slices/user.ts","components/Layout/Input.tsx","containers/SearchUser.tsx","containers/ResultsExplainer.tsx","containers/App.tsx","slices/index.ts","algorithms/finalizeResult.ts","algorithms/index.ts","api/axiosInstance.ts","api/index.ts","sagas/index.ts","index.tsx"],"names":["ThemeToggler","elem","React","useRef","themeData","localStorage","getItem","useState","theme","setTheme","useEffect","document","documentElement","setAttribute","current","style","transform","onClick","setItem","className","ref","size","Navbar","href","getStates","state","userState","getResult","rating","RateIcon","rate","icons","ProgressBar","percentage","title","color","setColor","cx","cy","r","strokeDashoffset","stroke","fill","ResultsList","results","useSelector","filter","Partial","map","result","idx","Score","Name","LabResults","Opportunuties","starred","user","toggleExpand","e","target","currentTarget","children","classList","toggle","opportunityList","dangerouslySetInnerHTML","__html","Message","Suggestions","join","length","login","rel","Diagnostics","querySelector","diagnosticsList","ResultsWrapper","SCORE_SUM","reduce","a","b","CALC_SCORE","parseInt","toFixed","getOverall","NotFound","width","height","src","notFound","alt","Alert","Loading","Results","error","loading","id","html_url","userSlice","createSlice","name","initialState","repos","reducers","getUser","payload","getUserSuccess","isStarred","setRating","setError","actions","Input","dispatch","useDispatch","username","setUsername","onSubmit","preventDefault","type","placeholder","value","onChange","SearchUser","ResultsExplainer","App","rootReducer","combineReducers","userReducer","finalizeResult","suggestions","userPopularity","repoDescriptionRating","repository","bioRating","repoPopularity","backlinkRating","backlinks","webpageRating","partials","licensing","archive","UserRating","bioExists","companyExists","locExists","blogExists","totalForks","totalStars","repoCount","TOTAL_STARS","stargazers_count","TOTAL_FORKS","forks_count","this","fork","Boolean","location","blog","bio","company","public_repos","res","split","STAR_RATE","followers","repoDescLength","description","homepage","rateBio","ratePopularity","rateRepoDescription","rateRepoPopularity","rateWebpage","rateBacklinks","notExist","el","license","full_name","today","Date","getTime","updated_at","Math","ceil","axiosInstance","axios","create","baseURL","method","responseType","GetUserData","userName","get","then","data","Error","stars","includes","setUser","rootSaga","put","response","message","all","takeEvery","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e4f1c33.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nconst ThemeToggler = () => {\n  const elem = React.useRef<HTMLDivElement | null>(null);\n  const themeData = localStorage.getItem('theme') || 'light';\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    setTheme(themeData);\n  }, [themeData]);\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n\n    if (elem.current) {\n      if (theme === 'dark') {\n        elem.current.style.transform = 'translate(210%)';\n      } else if (theme === 'light') {\n        elem.current.style.transform = 'translate(40%)';\n      }\n    }\n  }, [theme]);\n\n  const onClick = () => {\n    if (theme === 'dark') {\n      localStorage.setItem('theme', 'light');\n      setTheme('light');\n    } else if (theme === 'light') {\n      localStorage.setItem('theme', 'dark');\n      setTheme('dark');\n    }\n  };\n\n  return (\n    <div className=\"theme-toggler\">\n      <div className=\"picker\" ref={elem}></div>\n      <FaSun size={20} className=\"icon\" onClick={onClick} />\n      <FaMoon size={20} className=\"icon\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default ThemeToggler;\n","import React from 'react';\nimport { IoIosSpeedometer } from 'react-icons/io';\n\nimport ThemeToggler from '../components/Layout/ThemeToggler';\n\nconst Navbar = () => (\n  <div className=\"navbar\">\n    <a href=\"https://aykutsarac.github.io/github-rater\" className=\"logo\">\n      <IoIosSpeedometer className=\"icon\" size={28} /> GitHub Rater\n    </a>\n    <ThemeToggler />\n  </div>\n);\n\nexport default Navbar;\n","import { RootState } from '../types';\n\nexport const getStates = (state: RootState) => state.userState;\nexport const getResult = (state: RootState) => state.userState.rating;\nexport const getLoading = (state: RootState) => state.userState.loading;\nexport const getError = (state: RootState) => state.userState.error;\n","import React from 'react';\nimport { FaCircle } from 'react-icons/fa';\nimport { IoSquareSharp, IoTriangle } from 'react-icons/io5';\n\nconst RateIcon = ({ rate }: { rate: number }) => {\n  const icons = [\n    <FaCircle size={13} className=\"success\" />,\n    <IoSquareSharp size={15} className=\"warning\" />,\n    <IoTriangle size={15} className=\"danger\" />,\n    <FaCircle size={13} className=\"muted-light\" />,\n  ];\n\n  return rate >= 90 ? icons[0] : rate >= 50 ? icons[1] : rate >= 0 ? icons[2] : icons[3];\n};\n\nexport default RateIcon;\n","import React, { useEffect, useState } from 'react';\n\nimport RateIcon from './RateIcon';\n\nexport interface Props {\n  percentage: number;\n  title: string;\n}\n\nconst ProgressBar = ({ percentage = 0, title }: Props) => {\n  const [color, setColor] = useState('#0cce6b');\n\n  useEffect(() => {\n    if (percentage >= 90) return setColor('#0cce6b');\n    if (percentage >= 50) return setColor('#ffa400');\n    return setColor('#ff4e42');\n  }, [percentage]);\n\n  return (\n    <div className=\"progressbar\">\n      <div className=\"percent\">\n        <svg>\n          <circle cx=\"60\" cy=\"60\" r=\"60\"></circle>\n          <circle\n            cx=\"60\"\n            cy=\"60\"\n            r=\"60\"\n            style={{\n              strokeDashoffset: `${377 - (377 * percentage) / 100}`,\n              stroke: `${color}`,\n              fill: `${color}`,\n            }}\n          ></circle>\n        </svg>\n        <div className=\"number\">\n          <span style={{ color }}>{percentage}</span>\n        </div>\n      </div>\n      <h2 className=\"title\">{title}</h2>\n      <div className=\"info\">\n        <div>\n          <RateIcon rate={0} /> 0-49\n        </div>\n        <div>\n          <RateIcon rate={50} /> 50-89\n        </div>\n        <div>\n          <RateIcon rate={100} /> 90-100\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getResult } from '../../selectors';\n\nimport RateIcon from './RateIcon';\n\nconst ResultsList = () => {\n  const results = useSelector(getResult);\n  const generateResult = (percentage: number) =>\n    percentage >= 90 ? 'success' : percentage >= 50 ? 'warning' : 'danger';\n\n  return (\n    <Fragment>\n      {results &&\n        results\n          .filter((r) => !r.Partial)\n          .map((result, idx) => (\n            <div className=\"metric-wrapper\" key={idx}>\n              <span className=\"metric-title\">\n                <RateIcon rate={result.Score} /> {result.Name}\n              </span>\n              <span className={`metric-result ${generateResult(result.Score)}`}>\n                {result.Score}\n              </span>\n            </div>\n          ))}\n    </Fragment>\n  );\n};\n\nexport default ResultsList;\n","import React from 'react';\nimport ResultsList from './ResultsList';\n\nconst LabResults = () => (\n  <div className=\"labdata\">\n    <div className=\"metric-container\">\n      <h4>Lab Results</h4>\n      <div className=\"metric-grid\"></div>\n      <ResultsList />\n    </div>\n    <div className=\"muted results-info\">\n      Values are estimated and may vary. The{' '}\n      <a href=\"https://github.com/AykutSarac/github-rater#how-it-calculates\">\n        rating score is calculated\n      </a>{' '}\n      directly <br /> from these metrics.\n    </div>\n  </div>\n);\n\nexport default LabResults;\n","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getStates } from '../../selectors';\nimport RateIcon from './RateIcon';\n\nconst Opportunuties = () => {\n  const { rating, starred, user } = useSelector(getStates);\n\n  const toggleExpand = (e: React.MouseEvent<HTMLLIElement>) => {\n    if (starred && e.target === e.currentTarget) {\n      const target = e.target as HTMLLIElement;\n      target.children[1].classList.toggle('show');\n    }\n  };\n\n  const opportunityList = () => {\n    if (rating) {\n      return rating\n        .filter((r) => r.Score < 90 && !r.Partial)\n        .map((r, idx) => (\n          <li key={idx} className=\"expand\" onClick={toggleExpand}>\n            <RateIcon rate={r.Score} /> {r.Name}\n            {starred && (\n              <div\n                className=\"data\"\n                dangerouslySetInnerHTML={{\n                  __html:\n                    r.Message +\n                    (r.Suggestions\n                      ? '\\n\\nMissing Resources:\\n• ' + r.Suggestions.join('\\n• ')\n                      : ''),\n                }}\n              ></div>\n            )}\n          </li>\n        ));\n    } else {\n      return [];\n    }\n  };\n\n  if (opportunityList().length > 0) {\n    return (\n      <div className=\"audits\">\n        <h4>Opportunities</h4>\n        {!starred && (\n          <div className=\"block-message\">\n            <h3>\n              {user && user.login} should star{' '}\n              <a href=\"https://github.com/aykutsarac/github-rater\" target=\"_blank\" rel=\"noreferrer\">\n                GitHub Rater's repository at GitHub\n              </a>{' '}\n              to view opportunities that can improve GitHub rating efficiently!\n            </h3>\n          </div>\n        )}\n        <div className={`audit_result ${!starred ? ' blocked' : ''}`}>\n          <span className=\"header\">Opportunity</span>\n          <ul>{opportunityList()}</ul>\n        </div>\n      </div>\n    );\n  } else {\n    return <Fragment></Fragment>;\n  }\n};\n\nexport default Opportunuties;\n","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getStates } from '../../selectors';\nimport RateIcon from './RateIcon';\n\nconst Diagnostics = () => {\n  const { rating, starred, user } = useSelector(getStates);\n\n  const toggleExpand = (e: React.MouseEvent<HTMLLIElement>) => {\n    if (starred && e.target === e.currentTarget) {\n      const target = (e.target as HTMLLIElement).querySelector('div');\n      target && target.classList.toggle('show');\n    }\n  };\n\n  const diagnosticsList = () => {\n    if (rating) {\n      return rating\n        .filter((r) => r.Score < 0)\n        .map((r, idx) => (\n          <li key={idx} className=\"expand\" onClick={toggleExpand}>\n            <RateIcon rate={r.Score} /> {r.Name}{' '}\n            <span className=\"muted audit_text bold\">{r.Suggestions?.length} found</span>\n            {starred && (\n              <div\n                className=\"data\"\n                dangerouslySetInnerHTML={{\n                  __html:\n                    r.Message +\n                    (r.Suggestions ? '\\n\\nResources:\\n• ' + r.Suggestions.join('\\n• ') : ''),\n                }}\n              ></div>\n            )}\n          </li>\n        ));\n    } else {\n      return [];\n    }\n  };\n\n  if (diagnosticsList().length > 0) {\n    return (\n      <div className=\"audits\">\n        <h4>\n          Diagnostics{' '}\n          <span className=\"muted audit_text\">\n            These numbers don't directly affect the rating score.\n          </span>\n        </h4>\n        {!starred && (\n          <div className=\"block-message\">\n            <h3>\n              {user && user.login} should star{' '}\n              <a href=\"https://github.com/aykutsarac/github-rater\" target=\"_blank\" rel=\"noreferrer\">\n                GitHub Rater's repository at GitHub\n              </a>{' '}\n              to view opportunities that can improve GitHub rating efficiently!\n            </h3>\n          </div>\n        )}\n        <div className={`audit_result ${!starred ? ' blocked' : ''}`}>\n          <ul>{diagnosticsList()}</ul>\n        </div>\n      </div>\n    );\n  } else {\n    return <Fragment></Fragment>;\n  }\n};\n\nexport default Diagnostics;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getResult } from '../../selectors';\n\nimport ProgressBar from './ProgressBar';\nimport LabResults from './LabResults';\nimport Opportunuties from './Opportunities';\nimport Diagnostics from './Diagnostics';\n\nconst ResultsWrapper = () => {\n  const result = useSelector(getResult);\n  const convertToInt = (number: number) => parseInt(number.toFixed(0));\n\n  const getOverall = (): number => {\n    if (result) {\n      // Sum of all scores\n      const SCORE_SUM = result\n        .filter((r) => !r.Partial)\n        .map((e) => e.Score)\n        .reduce((a: number, b: number) => a + b);\n\n      // Increase overall score by 1.08 to improve accuracy\n      const CALC_SCORE = convertToInt((SCORE_SUM / 6) * 1.08);\n\n      return CALC_SCORE && CALC_SCORE > 100 ? 100 : CALC_SCORE;\n    } else {\n      return 0;\n    }\n  };\n\n  return (\n    <div className=\"lab-results\">\n      <ProgressBar percentage={getOverall()} title=\"Overall Score\" />\n      <div className=\"wrapper\">\n        <LabResults />\n        <Opportunuties />\n        <Diagnostics />\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsWrapper;\n","export default __webpack_public_path__ + \"static/media/404.04bf1677.svg\";","import React from 'react';\nimport notFound from '../../assets/404.svg';\n\nconst NotFound = () => (\n  <div className=\"notfound\">\n    <img width=\"300\" height=\"auto\" src={notFound} alt=\"not found\" />\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\n\nexport interface AlertProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Alert = ({ children, className }: AlertProps) => (\n  <div className={`alert ${className}`}>{children}</div>\n);\n\nexport default Alert;\n","import React from 'react';\n\nconst Loading = () => <progress className=\"loading\"></progress>;\n\nexport default Loading;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getStates } from '../selectors';\n\nimport ResultsWrapper from '../components/ResultSection/ResultsWrapper';\nimport NotFound from '../components/Layout/NotFound';\nimport Alert from '../components/Layout/Alert';\nimport Loading from '../components/Layout/Loading';\n\nconst Results = () => {\n  const { user, error, rating, loading } = useSelector(getStates);\n\n  return (\n    <section id=\"results\">\n      {user ? (\n        <Alert>\n          Results for user:{' '}\n          <a href={user.html_url} target=\"_blank\" rel=\"noreferrer\" className=\"highlight\">\n            {user.login}\n          </a>{' '}\n        </Alert>\n      ) : (\n        error && <Alert className=\"bold\">{error}</Alert>\n      )}\n      <div className=\"results-wrapper\">\n        {loading && <Loading />}\n        {rating && !error ? <ResultsWrapper /> : error && <NotFound />}\n      </div>\n    </section>\n  );\n};\n\nexport default Results;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ResultObject, UserState } from '../types';\n\nexport const initialState: UserState = {\n  user: null,\n  repos: null,\n  rating: null,\n  error: null,\n  starred: false,\n  loading: false,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    getUser: (state, { payload }: PayloadAction<string>) => {\n      state.loading = true;\n      state.error = null;\n    },\n    getUserSuccess: (state, { payload }: PayloadAction<any>) => {\n      state.user = payload.user;\n      state.repos = payload.repos;\n      state.starred = payload.isStarred;\n      state.loading = false;\n    },\n    setRating: (state, { payload }: PayloadAction<ResultObject[]>) => {\n      state.rating = payload;\n    },\n    setError: (state, { payload }: PayloadAction<string>) => {\n      state.user = null;\n      state.repos = null;\n      state.rating = null;\n      state.loading = false;\n      state.error = payload;\n    },\n  },\n});\n\nexport const { getUser, getUserSuccess, setRating, setError } = userSlice.actions;\nexport default userSlice.reducer;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../slices/user';\n\nconst Input = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n\n  const onSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    if (username !== '') {\n      if (username) dispatch(getUser(username));\n      setUsername('');\n    }\n  };\n\n  const onChange = (e: { target: { value: React.SetStateAction<string> } }) =>\n    setUsername(e.target.value);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" placeholder=\"GitHub Username...\" value={username} onChange={onChange} />\n      <button type=\"submit\" onClick={onSubmit}>\n        ANALYZE\n      </button>\n    </form>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getStates } from '../selectors';\n\nimport Input from '../components/Layout/Input';\n\nconst SearchUser = () => {\n  const { user } = useSelector(getStates);\n\n  return (\n    <div className=\"search-user\">\n      {!user?.login && (\n        <h2>View your GitHub profile rating and improve your profile upon results</h2>\n      )}\n      <Input />\n    </div>\n  );\n};\n\nexport default SearchUser;\n","import React from 'react';\n\nconst ResultsExplainer = () => {\n  return (\n    <div className=\"results-explainer\">\n      <div className=\"default-wrapper\">\n        <div>\n          <span className=\"header\">What Is GitHub Rater</span>\n          GitHub Rater, rates your GitHub profile upon data received from{' '}\n          <a href=\"https://docs.github.com/en/rest\" target=\"_blank\" rel=\"noreferrer\">\n            GitHub API\n          </a>{' '}\n          with our own algorithm.\n        </div>\n        <div>\n          <span className=\"header\">How Do We Calculate</span>\n          Learn more about{' '}\n          <a\n            href=\"https://github.com/AykutSarac/github-rater#how-it-calculates\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            our algorithm used at GitHub Rater\n          </a>\n          .\n        </div>\n        <div>\n          <span className=\"header\">Help Us Improving Accuracy</span>\n          We're doing our best to write the best algorithm in order to accurately rate your GitHub\n          profile. We appreciate your contributions, see our{' '}\n          <a href=\"https://github.com/AykutSarac/github-rater\" target=\"_blank\" rel=\"noreferrer\">\n            GitHub repository\n          </a>{' '}\n          here to learn how you can help us.\n        </div>\n        <div>\n          <span className=\"header\">Check GitHub Repository</span>\n          Check out{' '}\n          <a href=\"https://github.com/AykutSarac/github-rater\" target=\"_blank\" rel=\"noreferrer\">\n            GitHub Rater's Repository\n          </a>{' '}\n          at GitHub!\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsExplainer;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport Results from './Results';\nimport SearchUser from './SearchUser';\nimport ResultsExplainer from './ResultsExplainer';\n\nimport '../styles/index.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <SearchUser />\n      <Results />\n      <ResultsExplainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, Reducer } from 'redux';\n\nimport userReducer from './user';\nimport { RootState } from '../types';\n\nconst rootReducer: Reducer<RootState> = combineReducers<RootState>({\n  userState: userReducer,\n});\n\nexport default rootReducer;\n","import { Rating, ResultObject } from '../types';\n\ninterface Suggestions {\n  repository: string[];\n  backlinks: string[];\n  licensing: string[];\n  archive: string[];\n}\n\nconst finalizeResult = (rating: Rating, suggestions: Suggestions): ResultObject[] => {\n  const result = [\n    {\n      Name: 'User Popularity',\n      Message:\n        \"Your profile page tells people the story of your work through the repositories you're interested in, the contributions you've made, and the conversations you've had. <a href=\\\"https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/customizing-your-profile/about-your-profile\\\">See More.</a>\\n\\nTypically, GitHub isn’t primary place decision-makers look to fill roles in programming. Rather, it’s a handy tool for fine-matching skills and verifying that a candidate possesses them. If you’re using GitHub for advancement, you will want to present your projects and account activity in a way that’s clear and accessible.\",\n      Score: rating.userPopularity,\n    },\n    {\n      Name: 'Repository Description',\n      Message:\n        'You should provide brief description about your repository.\\n\\nNobody should spend their time going straight into the code and trying to understand what is the purpose from there. Instead, make sure that every repository you work on has the description field filled in. At the description part and the README file you want to talk about the features you wrote into the project. Demonstrate business acumen by articulating your role in the Git in one or two sentences that capture how you helped along the project. Think of Description as the headline, on which you’ll elaborate further in the ReadMe.',\n      Score: rating.repoDescriptionRating,\n      Suggestions: suggestions.repository,\n    },\n    {\n      Name: 'Biography',\n      Message:\n        'Add a bio to your profile to share information about yourself with other GitHub users. <a href=\"https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/customizing-your-profile/personalizing-your-profile#adding-a-bio-to-your-profile\">See More.</a>\\n\\nIt is suggested to have a proper biography with at least 5 words - past and present employers, projects you have worked on, or languages and frameworks you enjoy using, or are currently learning. Include the type of company or kind of projects you would be interested in the future.',\n      Score: rating.bioRating,\n    },\n    {\n      Name: 'Repository Popularity',\n      Message:\n        \"It's worth taking the time to sort your pinned repositories so that they make the best possible impression on the viewer.\\n\\nYou can change the position in which they appear by dragging and dropping. When you click on each repository you can add a brief description that will be visible on your profile. So you want to add something that tells them a little bit about the project and piques their interest.\",\n      Score: rating.repoPopularity,\n    },\n    {\n      Name: 'Backlinks & Information',\n      Message:\n        'Provide general information about yourself such as what is your current company, email address and links to your portfolio, GitLab, CodePen, or blog.',\n      Score: rating.backlinkRating,\n      Suggestions: suggestions.backlinks,\n    },\n    {\n      Name: 'Providing Web Pages',\n      Message:\n        'You can use GitHub Pages to host a website about yourself, your organization, or your project directly from a GitHub repository. <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\">See More.</a>\\n\\nIt\\'s important to provide a webpage if your repository is especially a library. You can use gitbook or similar tools to documante your project or provide a demo of how it works.',\n      Score: rating.webpageRating,\n    },\n  ];\n\n  const partials = [\n    {\n      Name: 'License repositories',\n      Message:\n        'You can include an open source license in your repository to make it easier for other people to contribute. <a href=\"https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository\">See More.</a>',\n      Score: suggestions.licensing?.length > 0 ? -1 : 100,\n      Suggestions: suggestions.licensing,\n      Partial: true,\n    },\n    {\n      Name: 'Archive repositories that are no longer maintained',\n      Message:\n        'You can archive a repository to make it read-only for all users and indicate that it\\'s no longer actively maintained. <a href=\"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/archiving-a-github-repository/archiving-repositories\">See More.</a>',\n      Score: suggestions.archive?.length > 0 ? -1 : 100,\n      Suggestions: suggestions.archive,\n      Partial: true,\n    },\n  ];\n\n  return [...result, ...partials];\n};\n\nexport default finalizeResult;\n","import { Rating, Repository, ResultObject, User } from '../types';\nimport finalizeResult from './finalizeResult';\n\nexport class UserRating {\n  // User Data & User Repositories (without forks)\n  user: User;\n  repos: Repository[];\n\n  // Whether user starred GitHub Rater's repo or not\n  isStarred: Boolean;\n\n  rating: Rating = {\n    bioExists: false,\n    companyExists: false,\n    bioRating: 0,\n    locExists: false,\n    blogExists: false,\n    userPopularity: 0,\n    repoPopularity: 0,\n    repoDescriptionRating: 0,\n    webpageRating: 0,\n    totalForks: 0,\n    totalStars: 0,\n    repoCount: 0,\n    backlinkRating: 0,\n  };\n\n  // Get all user data & repositories\n  constructor(user: User, repos: Repository[], isStarred: Boolean) {\n    const TOTAL_STARS = repos.map((r) => r.stargazers_count).reduce((a, b) => a + b);\n    const TOTAL_FORKS = repos.map((r) => r.forks_count).reduce((a, b) => a + b);\n\n    this.user = user;\n    this.repos = repos.filter((r) => !r.fork);\n    this.isStarred = isStarred;\n\n    this.rating.totalStars = TOTAL_STARS;\n    this.rating.totalForks = TOTAL_FORKS;\n    this.rating.locExists = Boolean(user.location);\n    this.rating.blogExists = Boolean(user.blog);\n    this.rating.bioExists = Boolean(user.bio);\n    this.rating.companyExists = Boolean(user.company);\n    this.rating.repoCount = user.public_repos;\n  }\n\n  rateBio() {\n    // Biography Rating\n    if (this.user.bio) {\n      const WORD_COUNT = this.user.bio.split(' ').length;\n\n      const res = WORD_COUNT * 10;\n      this.rating.bioRating = res > 100 ? 100 : res;\n    }\n  }\n\n  ratePopularity() {\n    // Popularity Rating\n    const STAR_RATE =\n      this.repos.map((r) => r.stargazers_count).reduce((a, b) => a + b) / this.repos.length;\n\n    const rate = this.user.followers / this.repos.length + STAR_RATE;\n    const res = parseInt((rate * 15).toFixed(0));\n    this.rating.userPopularity = res >= 100 ? 100 : res;\n  }\n\n  rateRepoPopularity() {\n    // Total Stars\n    const TOTAL_STARS = this.repos.map((r) => r.stargazers_count).reduce((a, b) => a + b);\n    const TOTAL_FORKS = this.repos.map((r) => r.forks_count).reduce((a, b) => a + b);\n\n    const rate = (TOTAL_STARS + TOTAL_FORKS * 1.2) / this.repos.length;\n    const res = parseInt((rate * 16).toFixed(0));\n    this.rating.repoPopularity = res >= 100 ? 100 : res;\n  }\n\n  rateRepoDescription() {\n    // Repository Description Rating\n    const repoDescLength = this.repos.filter((r) => r.description?.split(' ').length > 4);\n\n    const rate = this.repos.length / repoDescLength.length;\n    const res = parseInt((100 / rate).toFixed(0));\n    this.rating.repoDescriptionRating = res >= 100 ? 100 : res;\n  }\n\n  rateWebpage() {\n    // Webpage rating\n    const webpageExist = this.repos.map((r) => r.homepage).filter((r) => r);\n    const rate = (webpageExist.length / this.repos.length) * 100;\n\n    const res = parseInt((rate * 1.8).toFixed(0));\n    this.rating.webpageRating = res >= 100 ? 100 : res;\n  }\n\n  rateBacklinks() {\n    // Webpage rating\n    const bio = this.rating.bioExists ? 1 : 0;\n    const loc = this.rating.locExists ? 1 : 0;\n    const blog = this.rating.blogExists ? 1 : 0;\n    const company = this.rating.companyExists ? 1 : 0;\n\n    const rate = (bio + loc + blog + company) / 4;\n    this.rating.backlinkRating = rate * 100;\n  }\n\n  getResult(): ResultObject[] {\n    this.rateBio();\n    this.ratePopularity();\n    this.rateRepoDescription();\n    this.rateRepoPopularity();\n    this.rateWebpage();\n    this.rateBacklinks();\n\n    const repoDescLength = this.repos.filter(\n      (r) => r.description?.split(' ').length < 5 || !r.description,\n    );\n\n    const notExist = [\n      { type: this.rating.bioExists, Name: 'Biography' },\n      { type: this.rating.blogExists, Name: 'Blog' },\n      { type: this.rating.locExists, Name: 'Location' },\n      { type: this.rating.companyExists, Name: 'Company Name' },\n    ]\n      .filter((el) => !el.type)\n      .map((el) => el.Name);\n\n    const licensing = this.repos.filter((r) => !r.license).map((r) => r.full_name);\n\n    const archive = this.repos\n      .filter((r) => {\n        const today = new Date().getTime();\n        const updated_at = new Date(r.updated_at).getTime();\n\n        const DAY_TO_MS = 1000 * 60 * 60 * 24;\n        const DAYS_DIFF = Math.ceil((today - updated_at) / DAY_TO_MS);\n\n        return DAYS_DIFF > 240;\n      })\n      .map((r) => r.full_name);\n\n    const suggestions = {\n      repository: repoDescLength.map((r) => r.full_name),\n      backlinks: notExist,\n      licensing,\n      archive,\n    };\n\n    return finalizeResult(this.rating, suggestions);\n  }\n}\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.github.com/users',\n  method: 'GET',\n  responseType: 'json',\n});\n\nexport default axiosInstance;\n","import { APIData, Repository, User } from '../types';\nimport axiosInstance from './axiosInstance';\n\n// Fetch data from https://api.github.com and return user data and repos as object\nexport const GetUserData = async (userName: string): Promise<APIData> => {\n  try {\n    // Fetch User Data\n    const user: User = await axiosInstance.get(`/${userName}`).then((res) => res?.data);\n\n    // Fetch Repository Data\n    const repos: Repository[] = await axiosInstance\n      .get(`/${userName}/repos?&per_page=250`)\n      .then((res) => res?.data.filter((r: Repository) => !r.fork));\n    if (repos.length === 0) throw Error(\"Couldn't find any public repository.\");\n\n    // Fetch starred repositories & check if user starred GitHub Rater\n    const stars: Repository[] = await axiosInstance\n      .get(`/${userName}/starred`)\n      .then((res) => res?.data);\n    const isStarred = stars.map((r) => r.id).includes(389782256);\n\n    return {\n      user,\n      repos,\n      isStarred,\n    };\n  } catch (err) {\n    throw err;\n  }\n};\n","import { all, put, takeEvery } from 'redux-saga/effects';\nimport { UserRating } from '../algorithms';\nimport { GetUserData } from '../api';\nimport { getUser, getUserSuccess, setError, setRating } from '../slices/user';\nimport { APIData } from '../types';\n\nexport interface SyncAction {\n  type: string;\n  payload: string;\n}\n\nfunction* setUser({ payload }: SyncAction) {\n  try {\n    const data: APIData = yield GetUserData(payload);\n\n    if (data.user) {\n      const result = new UserRating(data.user, data.repos, data.isStarred).getResult();\n\n      yield put(setRating(result));\n      yield put(getUserSuccess(data));\n    }\n  } catch (err) {\n    yield put(setError(err.response?.data.message || err.message || 'User Not Found'));\n  }\n}\n\n// If any of these functions are dispatched, invoke the appropriate saga\nfunction* rootSaga() {\n  yield all([takeEvery(getUser.type, setUser)]);\n}\n\nexport default rootSaga;\n","import React from 'react';\nimport { configureStore } from '@reduxjs/toolkit';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './slices';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}